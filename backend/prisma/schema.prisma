generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int     @id @default(autoincrement())
  username       String  @unique
  email          String  @unique
  passwordHash   String
  fullName       String?
  dailyHealthMetrics DailyHealthMetrics[]
  physicalActivities PhysicalActivity[]
  goals          Goal[]
  createdGroups  Group[] @relation("UserCreatedGroups")
  posts          Post[]
}

model DailyHealthMetrics {
  id              Int     @id @default(autoincrement())
  userId          Int     @unique
  user            User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  date            DateTime @default(now())
  caloriesConsumed Int?
  waterConsumedMl Int?
  stepsCount      Int?
  weightKg        Decimal?
  sleepQuality    Int @default(0)
  sleepHours      Decimal?
  
  @@unique([userId, date]) 
}

model PhysicalActivity {
  id               Int     @id @default(autoincrement())
  userId           Int
  user             User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  activityType     String
  durationMinutes  Int?
  caloriesBurned   Int?
  date            DateTime
}

model Goal {
  id          Int     @id @default(autoincrement())
  userId      Int
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  title       String
  description String?
  targetValue Decimal?
  status      String  @default("active")
  createdAt   DateTime @default(now())
}

model Group {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  imagePath   String?
  createdBy   Int
  creator     User    @relation(fields: [createdBy], references: [id], onDelete: Cascade, name: "UserCreatedGroups")
  posts       Post[]
}

model Post {
  id          Int     @id @default(autoincrement())
  userId      Int
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  groupId     Int
  group       Group   @relation(fields: [groupId], references: [id], onDelete: Cascade)
  title       String
  content     String
  category    String?
  likesCount  Int @default(0)
  createdAt   DateTime @default(now())
}
